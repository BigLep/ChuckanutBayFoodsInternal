Global Git Setup:
 Download and install Git: http://git-scm.com/
 Install SSH keys on computer and at github (see http://help.github.com/mac-set-up-git/)

  # Set these variables first
  fullName="Steve Loeppky"
  emailAddress="stvn@loeppky.com

  # Commands that can be copy and pasted
  git config --global user.name $fullName
  git config --global user.email $emailAddress
        
Creating a local repository from github
  # Set these variables first
  # If sharing this project with Eclipse, this is the path to the Eclipse project directory (e.g., ~/Documents/EclipseWorkspace/ChuckanutBayInternal)
  projectDir=/path/to/project
  
  # Commands that can be copy and pasted
  cd $projectDir
  git init
  git remote add github git@github.com:BigLep/ChuckanutBayFoodsInternal.git
  
  # At this point, you need to either create a new developer branch, or checkout an existing branch.  

Creating a new developer branch
  # Set these variables first
  firstName=steve
  
  # Commands that can be copy and pasted
  git fetch github
  git checkout develop
  newBranch=develop-${firstName}
  git branch $newBranch
  git checkout $newBranch
  git push github $newBranch

Checkout an existing branch
  # Set these variables first
  branchName=develop-steve
  
  # Commands that can be copy and pasted
  git fetch github
  git checkout $branchName

Adding a new branch to github
  # Set these variables first
  oldBranch=steve
  newBranch=develop
  
  # Commands that can be copy and pasted
  git checkout $oldBranch
  git branch $newBranch
  git checkout $newBranch
  git push github $newBranch

Branch strategy:
* master: This branch should have production ready code.  We only push to this branch from develop when the code has been well tested and is ready for primetime.
* develop: This represents our latest development code.  Code is pushed to this branch from "develop-user" branches.
* develop-user: Each developer has their own branch.  A user can commit to this branch whenever and push to github whenever as it only affect them.  When code has been reviewed in a develop-user branch, it can be merged to develop.
This is a simplification of the ideas discussed in http://nvie.com/posts/a-successful-git-branching-model/

Development workflow:
* Sync changes from github/develop
  git fetch github
  git merge github/develop
* Make and test changes
* Commit change to develop-user branch.
* Push change to github/develop-user for code review
* Incorporate feedback
* Commit change to develop-user branch.
* Push change to github/develop-user for code review
* Get final sign off
* Merge change into github/develop so others can pick the change up
  git fetch github
  git checkout develop
  git merge github/develop-user
  git push github develop

Code reviews:
Make a commit in your develop-user branch.
Push the develop-user commit(s) to githut.
Send an email to other developers to get it reviewed.  The code must be reviewed before it is pushed to develop.

Reference:
  http://gitref.org/